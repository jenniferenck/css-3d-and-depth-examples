/* ================================= 
  Button Transitions
==================================== */

.button {
  transition: background 0.3s;
}
.button:hover {
  background: rgba(74, 137, 202, 1);
}

/* ================================= 
  Photo 3D Transforms & Transitions
==================================== */

/* FOR FLASHCARD VIEW */

.photo {
  transition: transform 1s ease-out;

  /* child elements (side-a and side-b) can both be 3D now */
  transform-style: preserve-3d;
}

.photo:hover {
  transform: rotateY(180deg);
}

/* we need to hide the back so it doesn't cover side-b */
.side-a {
  backface-visibility: hidden;
}

/* we need to rotate side-b  */
.side-b {
  transform: rotateY(180deg);
  backface-visibility: hidden;
}

/* CUBE ROTATION EXAMPLE */

.cube-container {
  display: flex;
  justify-content: center;
  margin: 1em;
  perspective: 800px;
}

.cube {
  /* background-color: darkblue; */
  transition: transform 2s ease-in-out;
  transform-style: preserve-3d;
  /* position: relative; */
  height: 200px;
  width: 200px;
}

.cube:hover {
  transform: rotateX(-270deg);
}

/* for front, back, left, right */
.cube-side {
  border: solid black 1px;
  height: 100%;
  width: 100%;
  position: absolute;
}

.front {
  background-color: aquamarine;
  /* gives front perception of being closest than back 
    if we were to give the other sides negative or smaller px, they will stack in that order*/
  transform: translateZ(100px);
}

.back {
  background-color: lightgreen;
  /* gives the appearance of being further back facing backwards */
  transform: translateZ(-100px) rotateY(180deg);
}

.left {
  background-color: peachpuff;
  transform: rotateY(90deg) translateZ(100px);
}

.right {
  background-color: yellowgreen;
  transform: rotateY(-90deg) translateZ(100px);
}
